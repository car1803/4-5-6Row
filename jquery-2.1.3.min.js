var stone = [];
var mark = [];
var height = [0, 0, 0, 0, 0, 0, 0];
var moves = [];
var solutions = [];
var board = [
[0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0]];
var won = false;
var player_1_auto = true;
var player_2_auto = true;


function auto_play() {
  if(moves.length % 2) return player_2_auto;
  else return player_1_auto;
}


function play(col, dont_compute) {
  board[col][height[col]] = 1 + moves.length % 2;
 //drop
  height[col]++;
  moves.push(col);
  //win
  window.history.replaceState(null, null, get_pos_param());
  if(dont_compute) return;
  print_solution();
}



function print_next_player() {
  if(won) {
    $("#player_1").removeClass("active").addClass("inactive");
    $("#player_2").removeClass("active").addClass("inactive");
  }
  else if(moves.length % 2 == 0) {
    $("#player_1").removeClass("inactive").addClass("active");
    $("#player_2").removeClass("active").addClass("inactive");
  }
  else {
    $("#player_1").removeClass("active").addClass("inactive");
    $("#player_2").removeClass("inactive").addClass("active");
  }
}

function get_pos() {
  var pos = "";
  for (var i = 0; i < moves.length; i++) pos = pos + (moves[i] + 1);
  return pos;
}

function get_pos_param() {
  var pos=get_pos();
  if(pos == "") return location.pathname;
  else return "?pos=" + pos;
}

function  print_solution() {
  print_next_player();                          

  if(won) {
    var player = moves.length%2 == 0 ? "Las amarillas" : "Las rojas";
    var message = "[1] ganaron".replace("[1]", player);
    $("#solution_header").text(message);
    $(".solution").text("").css("background-image","none");
    gtag('event', 'game_end');
    return;
  }
  if(moves.length == 42) {
    var message = "Empate";
    $("#solution_header").text(message);
    $(".solution").text("").css("background-image","none");
    gtag('event', 'game_end');
    return;
  }

  var json = solutions[moves.length];
  if(json === undefined || json.pos !== get_pos()) { //TODO check != ??
    print_solution();
    return;
  }

  if(auto_play()) {
    var best = -100;
    var possible = [];
    for (var i = 0; i < 7; i++) 
      if(json.score[i] != 100 && json.score[i] > best) {
        best = json.score[i];
        possible = [i];
      }
      else if(json.score[i] == best) possible.push(i);

    var col = possible[Math.floor((Math.random() * possible.length))];
    play(col);
  }

  else {

    var best = -100;
    for (var i = 0; i < 7; i++)
      if(json.score[i] != 100 && json.score[i] > best) best = json.score[i];

    var nb_best = 0;
    for (var i = 0; i < 7; i++)
      if(best == 0 && json.score[i] == 0) nb_best++;
      else if(best > 0 && json.score[i] > 0 && json.score[i] != 100) nb_best++;



    for (var i = 0; i < 7; i++) {
      if(json.score[i] == 100) {
        $("#sol" + i).text("").css("background-image","none");
      }
      else {
        $("#sol" + i).text(json.score[i]);
        if(json.score[i] > 0) {
          if(json.score[i] == best) $("#sol" + i).css("background-image","url(/up_star.png)");
          else $("#sol" + i).css("background-image","url(/up.png)");
        }
        else if(json.score[i] < 0) {
          if(json.score[i] == best) $("#sol" + i).css("background-image","url(/down_star.png)");
          else $("#sol" + i).css("background-image","url(/down.png)");
        }
        else {
          if(json.score[i] == best) $("#sol" + i).css("background-image","url(/neutral_star.png)");
          else $("#sol" + i).css("background-image","url(/neutral.png)");
        }
      }
    }

    var message;
    if(best > 0) {
      var nb_moves = Math.floor((45 - moves.length)/2) - best;
      if(nb_moves > 1) message = "[1] pueden ganar en [2] movimientos".replace("[2]", nb_moves);
      else message = "[1] pueden ganar en 1 movimiento";
    }
    else if(best < 0) {
      var nb_moves = Math.floor((44 - moves.length)/2) + best;
      if(nb_moves > 1) message = "[1] pierden en [2] movimientos".replace("[2]", nb_moves);
      else message = "[1] pierden en 1 movimiento";
    }
    else {
      message = "[1] pueden empatar";
    }

    var player = moves.length%2 == 0 ? "Las rojas" : "Las amarillas";
    $("#solution_header").text(message.replace("[1]", player));

  }
}

function query_param(key) {
    var match = location.search.match(new RegExp("[?&]"+key+"=([^&]+)(&|$)"));
    return (match == null) ? "" : match[1];
}



function init() {
  for (var x = 0; x < 7; x++) {
    for (var y = 0; y < 6; y++) {
      var v = $("<div/>");
      v.addClass("board");
      v.css("left", (x*100/7)+'%');
      v.css("top",  ((5-y)*100/7)+'%');
      v.click(click_handler(x));
      v.appendTo("#board");
    }
  } 

  for (i = 0; i < 42; i++) {
    var v = $("<div/>");
    if (i % 2 === 0) v.addClass("player1");
    else v.addClass("player2");
    v.hide();
    v.appendTo("#board");
    stone[i] = v;
  }
  for (i = 0; i < 4; i++) {
    var v = $("<div/>");
    v.addClass("win");
    v.hide();
    v.appendTo("#board");
    mark[i] = v;
  }

  var pos = query_param("pos");
  history.replaceState(null, null, "");
  history.pushState(null, null, "");
  $(window).on("popstate", back);

  while(pos.length > 0) {
    var c = pos.charCodeAt(0) - "1".charCodeAt(0);
    if(c >= 0 && c <= 6 && canplay(c)) play(c, true);
    else break;
    pos = pos.substr(1);
  }
  print_solution();
}

$(window).load(function(){init();});

